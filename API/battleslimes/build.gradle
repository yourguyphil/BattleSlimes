buildscript {
	repositories {
		maven { url 'https://maven.fabric.io/public' }
	}

	// move it here
	dependencies {
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.+'
	}

}

plugins {
	id 'org.springframework.boot' version '2.7.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.google.protobuf' version '0.8.17'
	// Generate IntelliJ IDEA's .idea & .iml project files
	id 'idea'
}

apply plugin: "com.google.cloud.tools.appengine-appyaml"
apply plugin: "com.google.cloud.tools.appengine"

group = 'com.battleslimes'
version = '0.0.1-SNAPSHOT'
//Downgrade to 11 to use Google App Engine
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	gradlePluginPortal()
	mavenCentral()
	mavenLocal()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

def grpcVersion = '1.43.1'
def protobufVersion = '3.19.1'
def protocVersion = protobufVersion

dependencies {

	//gRPC
	implementation "net.devh:grpc-spring-boot-starter:2.11.0.RELEASE"
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"

	//mongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//MISC
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.jetbrains:annotations:19.0.0'
	implementation 'com.google.cloud.tools:appengine-gradle-plugin:2.4.1'
}

protobuf {
	protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
	plugins {
		grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
	}
	generateProtoTasks {
		all()*.plugins { grpc {} }
	}
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/grpc'
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

test {
	useJUnitPlatform()
}
