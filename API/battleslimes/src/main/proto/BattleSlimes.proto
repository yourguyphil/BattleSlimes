syntax = "proto3";
option java_package = "com.battleslimes.battleslimes.com.battleslimes.battleslimes.services";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

service BattleSlimeService {
  /*
   Get a list of all BattleSlimes

   Returns: A repeated list of slimes models. The list is sorted by collection id and versioned based on collection realeases.

   Permission Level: Read
  */
  rpc GetSlimes(google.protobuf.Empty) returns (SlimeCollection) {
    option (google.api.http) = {
      post: "/v1/slimes"
    };
  };

  /*
   Retrieve a slime by collector ID

   Returns: A single default slime model

   Permission Level: Read
  */
  rpc GetSlime(GetSlimeRequest) returns (Slime) {
    option (google.api.http) = {
      post: "/v1/slime/{collector_number}"
    };
  };

  /*
    Retrieve a random slime

    Returns: A single default slime model

    Permission Level: Read
  */
  rpc GetRandomSlime(google.protobuf.Empty) returns (Slime) {
    option (google.api.http) = {
      post: "/v1/slime/random"
    };
  };
}
 
// BattleSlimes in a NFT Collectable Monster Game built on the Ethermium chain.
// The static informational website is created in pure HTML, CSS, and Javascript. Hosted on Google Cloud Platform. 
// The BattleSlimes gRPC API serves informational read-only data. (Also includes REST style endpoints) Built upon MongoDB and Springboot. 
// Please see our swagger docs for more information. (gRPC documentations)
 
/*
Default slime model  
 */
message Slime {
  // collector_number, Unique identifier of a slime. String of length 4. Range 0000 -> 9999
  string collector_number = 1;
  // name, Unique name of the BattleSlime
  string name = 2;
  // description, Describes background the BattleSlime 
  string description = 3;
  // metadata, Technical Details of the Slime TBD
  string metadata = 4;
  // picture, link to picture on GCP
  string picture = 5;
  // opensea_url, URl to opensea for NFT
  string opensea_url = 6;
}

message SlimeCollection {
  // Numerous default slimes 
  repeated Slime slimes = 1;
}

message GetSlimeRequest {
  // collector_number, see definition in Slime
  string collector_number = 1;
}